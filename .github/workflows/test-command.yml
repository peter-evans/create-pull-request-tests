name: test-command
on:
  repository_dispatch:
    types: [test-command]
jobs:
  beforeTest:
    runs-on: ubuntu-latest
    steps:
      # Get the target repository and branch
      - name: Get the target repository and branch
        id: vars
        run: |
          repository=${{ github.event.client_payload.slash_command.repository }}
          if [[ -z "$repository" ]]; then repository="peter-evans/create-pull-request"; fi
          echo ::set-output name=repository::$repository
          branch=${{ github.event.client_payload.slash_command.branch }}
          if [[ -z "$branch" ]]; then branch="master"; fi
          echo ::set-output name=branch::$branch
      - name: Check the target branch name
        run: echo ${{ steps.vars.outputs.branch }}
      # Checkout the branch to test
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACTIONS_BOT_TOKEN }}
          repository: ${{ steps.vars.outputs.repository }}
          ref: ${{ steps.vars.outputs.branch }}
      # Create an artifact from the action
      - uses: actions/upload-artifact@v1
        with:
          name: create-pull-request
          path: .


  testCreate:
    #if: github.event.client_payload.slash_command.arg2 == 'testCreate' || github.event.client_payload.slash_command.arg2 == ''
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        id: cpr
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Add report file
          committer: GitHub <noreply@github.com>
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          title: '[Example] Add report file'
          body: |
            New report
            - Contains *today's* date
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          labels: report, automated pr
          assignees: peter-evans
          reviewers: peter-evans
          milestone: 1
          project: Example Project
          project-column: To do
          branch: tests/branch/create-update
      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ env.PULL_REQUEST_NUMBER }}"
          echo "Pull Request Number - ${{ steps.cpr.outputs.pr_number }}"


  testUpdate:
    needs: testCreate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        id: cpr
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Add report file
          committer: GitHub <noreply@github.com>
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          title: '[Example] Add report file (updated)'
          body: |
            New report (updated)
            - Contains *today's* date
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          labels: report, automated pr
          assignees: peter-evans
          reviewers: peter-evans
          milestone: 1
          project: Example Project
          project-column: To do
          branch: tests/branch/create-update
      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ env.PULL_REQUEST_NUMBER }}"
          echo "Pull Request Number - ${{ steps.cpr.outputs.pr_number }}"


  testIdenticalChangeCreate:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: echo "some data" > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testIdenticalChange
          branch: tests/branch/identical-change


  testIdenticalChangeUpdate:
    needs: testIdenticalChangeCreate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: echo "some data" > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testIdenticalChange
          branch: tests/branch/identical-change


  testNoDiffCreate:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testNoDiff
          branch: tests/branch/no-diff


  testNoDiffUpdate:
    needs: testNoDiffCreate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      # Running with no update effectively reverts the branch back to match the base
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testNoDiff
          branch: tests/branch/no-diff


  testCommitsOnBaseCreate:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Create test base branch
      - name: Create test base
        run: |
          git config user.name 'CPR Test User'
          git config user.email 'cpr-test-user@users.noreply.github.com'
          git push --force origin HEAD:refs/heads/tests/base/commits-on-base
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testCommitsOnBase
          branch: tests/branch/commits-on-base
          base: tests/base/commits-on-base


  testCommitsOnBaseCommit:
    needs: testCommitsOnBaseCreate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: tests/base/commits-on-base
      # Create commits on the test base branch
      - name: Create commits
        run: |
          git config user.name 'CPR Test User'
          git config user.email 'cpr-test-user@users.noreply.github.com'
          date +%s > report.txt
          git commit -am "Commit on base 1"
          date +%s > new-report.txt
          git add -A
          git commit -m "Commit on base 2"
          git push


  testCommitsOnBaseUpdate:
    needs: testCommitsOnBaseCommit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: tests/base/commits-on-base
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testCommitsOnBase
          branch: tests/branch/commits-on-base
          base: tests/base/commits-on-base


  testCommitsOnWorkingBase:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create commits
        run: |
          git config user.name 'CPR Test User'
          git config user.email 'cpr-test-user@users.noreply.github.com'
          date +%s > report.txt
          git commit -am "Commit during workflow 1"
          date +%s > new-report.txt
          git add -A
          git commit -m "Commit during workflow 2"
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testCommitsOnWorkingBase
          branch: tests/branch/commits-on-working-base


  testWorkingBaseNotBaseSetup:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Create test base branch
      - name: Create test base
        run: |
          git config user.name 'CPR Test User'
          git config user.email 'cpr-test-user@users.noreply.github.com'
          date +%s > report.txt
          git commit -am "This commit should not appear in pr branches"
          git push --force origin HEAD:refs/heads/tests/base/working-base-not-base


  testWorkingBaseNotBaseCreate:
    needs: testWorkingBaseNotBaseSetup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: tests/base/working-base-not-base
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testWorkingBaseNotBase
          branch: tests/branch/working-base-not-base
          base: master


  testMultiPlatform:
    needs: beforeTest
    name: testCreateMultiPlatform on ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        if:  matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
        run: date +%s > report.txt
      - name: Create report file (windows)
        if:  matrix.platform == 'windows-latest'
        run: echo %DATE% %TIME% > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          committer: Peter Evans <peter-evans@users.noreply.github.com>
          title: testMultiPlatform on ${{ matrix.platform }}
          branch: tests/multi-platform
          branch-suffix: random


  testGitConfigSetUser:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Set user in git config
        run: |
          git config user.name 'CPR Test User'
          git config user.email 'cpr-test-user@users.noreply.github.com'
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testGitConfigSetUser
          branch: tests/git-config-set-user


  testGitConfigSetCommitterAuthor:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Set committer and author in git config
        run: |
          git config committer.name 'CPR Test Committer'
          git config committer.email 'cpr-test-committer@users.noreply.github.com'
          git config author.name 'CPR Test Author'
          git config author.email 'cpr-test-author@users.noreply.github.com'
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testGitConfigSetCommitterAuthor
          branch: tests/git-config-set-committer-author


  testCreateWithPAT:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          title: testCreateUpdateWithPAT
          branch: tests/create-update-with-pat


  testUpdateWithPAT:
    needs: testCreateWithPAT
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          title: testCreateUpdateWithPAT
          branch: tests/create-update-with-pat


  testCreateInRemoteRepo:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: peter-evans/create-pull-request-tests-remote
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          title: testCreateInRemoteRepo
          branch: tests/create-in-remote-repo


  testCreateWithRelativePath:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: relative-path
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        working-directory: relative-path
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: relative-path
          title: testCreateWithRelativePath
          branch: tests/create-with-relative-path


  testPushLFSTrackedFile:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create LFS tracked file
        run: |
          git lfs track "*.dat"
          date +%s > large_file.dat
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testPushLFSTrackedFile
          branch: tests/push-lfs-tracked-file


  testCreateBranchViaSSH:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      # Clone via SSH
      - uses: peter-evans/ssh-agent@master
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Checkout via SSH
        run: git clone git@github.com:peter-evans/create-pull-request-tests.git .
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testCreateBranchViaSSH
          branch: tests/create-branch-via-ssh


  testPushBranchToFork:
    needs: beforeTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set the remote URL to the machine user's fork
        run: |
          git remote set-url origin https://github.com/create-pull-request-machine-user/create-pull-request
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.CPR_MACHINE_USER_TOKEN }}
          title: testPushBranchToFork
          branch: tests/push-branch-to-fork
          request-to-parent: true


  testAlpineContainer:
    needs: beforeTest
    runs-on: ubuntu-latest
    container:
      image: alpine
    steps:
      - name: Install dependencies
        run: apk --no-cache add git python3
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testAlpineContainer
          branch: tests/alpine-container


  testUbuntuContainer:
    needs: beforeTest
    runs-on: ubuntu-latest
    container:
      image: ubuntu
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y software-properties-common
          add-apt-repository -y ppa:git-core/ppa
          apt-get install -y python3 python3-pip git
      - uses: actions/checkout@v2
      # Download the action artifact
      - uses: actions/download-artifact@v1
        with:
          name: create-pull-request
          path: create-pull-request-local
      # Test
      - name: Create report file
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: ./create-pull-request-local
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: testUbuntuContainer
          branch: tests/ubuntu-container


  afterTest:
    needs:
      - testUpdate
      - testIdenticalChangeUpdate
      - testNoDiffUpdate
      - testCommitsOnBaseUpdate
      - testCommitsOnWorkingBase
      - testWorkingBaseNotBaseCreate
      - testMultiPlatform
      - testGitConfigSetUser
      - testGitConfigSetCommitterAuthor
      - testUpdateWithPAT
      - testCreateInRemoteRepo
      - testCreateWithRelativePath
      - testCreateBranchViaSSH
      - testPushBranchToFork
      - testPushLFSTrackedFile
      - testAlpineContainer
      - testUbuntuContainer
    runs-on: ubuntu-latest
    steps:
      # Add reaction to the comment
      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.ACTIONS_BOT_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reaction-type: hooray
